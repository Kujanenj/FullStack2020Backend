{"version":3,"sources":["services/Phone.js","components/PersonsForm.js","components/Filter.js","components/Person.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonsForm","persons","setPersons","handleMessageChange","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","newPersonObject","name","number","collisionResult","find","person","window","confirm","PhoneService","map","returnedPerson","concat","value","onChange","target","type","Filter","setFilter","filter","Person","handleRemoveEvent","onClick","Notification","message","style","className","App","currentNotification","setCurrentNotification","useEffect","msg","styl","setTimeout","filteredPersons","toLowerCase","includes","console","log","key","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcde4ec0.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://whispering-beach-90642.herokuapp.com/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\nconst remove = id =>{\n    const request = axios.delete(baseUrl+\"/\"+id)\n    return request.then(response => response.data)\n}\nexport default { \n   getAll, \n   create, \n   update,\n   remove \n}","import React, {useState} from 'react'\nimport PhoneService from '../services/Phone'\n\n\nconst PersonsForm = ({persons,setPersons,handleMessageChange}) => {\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const handleNameChange = (event) => {\n      setNewName(event.target.value);\n    };\n    const handleNumberChange = (event) => {\n      setNewNumber(event.target.value);\n    };\n    const addName = (event) => {\n      event.preventDefault();\n      const newPersonObject = {\n        name: newName,\n        number: newNumber,\n      };\n    \n      var collisionResult = persons.find(person => person.name ===newPersonObject.name)\n      if (collisionResult != null) {\n        if (window.confirm(\"Do you really want to update \"+newName+\"?\")){\n          PhoneService.update(collisionResult.id,newPersonObject).then(response =>{\n            setPersons(persons.map(person => person.id===collisionResult.id ? response : person))\n          })\n          handleMessageChange(\"Updated\",\"update\")\n        }\n      } else {\n        PhoneService.create(newPersonObject).then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          handleMessageChange(\"New person added\",\"add\")\n        });\n        \n      }\n    };\n    return (\n      <form onSubmit={addName}>\n        <div>\n          name:\n          <input value={newName} onChange={handleNameChange} />\n          <br></br>\n          number :<input value={newNumber} onChange={handleNumberChange}></input>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    );\n  };\n  export default PersonsForm","import React from 'react'\n\n\nconst Filter = ({setFilter}) => {\n  const handleFilterChange = (event) => {\n    const filter = event.target.value\n    filter === \"\" \n      ? setFilter(null) \n      : setFilter(filter)\n  }\n\n  return (\n    <>\n    <p>Filter shown with</p>\n    <input\n      onChange={handleFilterChange}\n    />\n    </>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\n\nconst Person = ({name,number,handleRemoveEvent}) => {\n  return (\n    <li>{name}: {number} \n      <button onClick={handleRemoveEvent}>Remove</button>\n    </li>\n  )\n}\n\nexport default Person\n","import React from \"react\";\nimport \"../App.css\";\nconst Notification = ({ message, style }) => {\n    if (message === null) {\n      return null;\n    }\n    return <div className={style}>{message}</div>;\n  };\nexport default Notification","import React, { useState, useEffect } from \"react\";\nimport PhoneService from \"./services/Phone\";\nimport PersonsForm from \"./components/PersonsForm\";\nimport Filter from \"./components/Filter\";\nimport Person from \"./components/Person\";\nimport Notification from \"./components/Notification\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState(null);\n  const [currentNotification, setCurrentNotification] = useState({\n    message: null,\n    style: \"nada\",\n  });\n\n  useEffect(() => {\n    PhoneService.getAll().then((response) => setPersons(response));\n  }, []);\n  const handleMessageChange = (msg, styl) => {\n    setCurrentNotification({ message: msg, style: styl });\n    setTimeout(() => {\n      setCurrentNotification({ msg: null, style: \"uusi\" });\n    }, 2500);\n  };\n  const filteredPersons = persons.filter((person) => {\n    // if filter is empty, return all names\n    if (filter === null) return true;\n    else {\n      return person.name.toLowerCase().includes(filter.toLowerCase())\n        ? true\n        : false;\n    }\n  });\n\n  const deletePerson = (id) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete ${\n          persons.find((p) => p.id === id).name\n        }?`\n      )\n    ) {\n      PhoneService.remove(id).then(\n        setPersons(persons.filter((person) => person.id !== id))\n        );\n        handleMessageChange(\"Removed\",\"remove\")\n    }\n  };\n  console.log(currentNotification);\n  return (\n    <div>\n      <Notification\n        message={currentNotification.message}\n        style={currentNotification.style}\n      ></Notification>\n      <h2>Phonebook</h2>\n      <Filter setFilter={setFilter} />\n      <h2>Add new</h2>\n      <PersonsForm\n        persons={persons}\n        setPersons={setPersons}\n        handleMessageChange={handleMessageChange}\n      />\n      <h2>Numbers</h2>\n      <ul>\n        {filteredPersons.map((person) => (\n          <Person\n            key={person.id}\n            name={person.name}\n            number={person.number}\n            handleRemoveEvent={() => deletePerson(person.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}